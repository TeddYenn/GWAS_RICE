[{"path":"index.html","id":"sec-welcome-to-gwas-tutorial","chapter":"Welcome to GWAS Tutorial","heading":"Welcome to GWAS Tutorial","text":"website GWAS\nanalysis R PLINK programs.work Yen-Hsiang (Teddy) Huang licensed \nGNU\nGeneral Public License.\n","code":""},{"path":"preface.html","id":"preface","chapter":"Preface","heading":"Preface","text":"GitHub page provides hands-tutorial genome-wide association\nstudies (GWAS) part Teddy’s Lumi’s research program Texas\n&M University supervision Dr. Endang Septiningsih Dr.\nMichael Thomson.tutorial focuses standard workflow, codes, resources needed\nperform GWAS rice divided seven sections. \nabsolute beginners, ’ve also included introductory section \nR,\nRStudio, \nPLINK. -> Click\n!book written RStudio using\nbookdown. \nwebsite hosted via GitHub\nTeddYenn’s repository.questions suggestions, feel free reach via\nemail teddyenn2@gmail.com\n(Teddy Huang).","code":""},{"path":"preface.html","id":"outline","chapter":"Preface","heading":"Outline","text":"begin processing genotypic phenotypic datasets, followed \nconducting GWAS post-GWAS analyses, conclude findings \ninterpretations results.Chapter 1 downloads SNP data \nSNP-Seek (3K RG), align IDs, perform SNP QC, generate \nfinal GWAS data.Chapter 2 explores phenotypic data\ngenerate final GWAS data.Chapter 3 conduct genome-wide association study\n(GWAS) link genotypic variation phenotypic traits \ninterest.Chapter 4 delve post-GWAS analyses \ndissect validate significant associations identified\nGWAS.Chapter 5 present additional exploratory analyses\nextend beyond primary GWAS objectives.provide detailed findings make narratives \nresults.Chapter 6 synthesize key findings \ngenotypic, phenotypic, GWAS, post-GWAS analyses.Chapter 7 summarize overall outcomes \nstudy, emphasizing major insights gained acknowledging \nlimitations encountered.","code":""},{"path":"preface.html","id":"sec-tutorial-for-r-rstudio--plink","chapter":"Preface","heading":"Tutorial for R, RStudio & PLINK","text":"\nTAMU HPRC users, don’t need download RStudio. \nbuilt-RStudio can launch online HPRC.\nStep 1: Download Install R (Prerequisite)Visit official R Project website: https://www.r-project.org/.\nWindows: Click Download R Windows, select “base,”\ndownload latest version.\nMacOS: Click Download R macOS choose correct\nversion system.\nVisit official R Project website: https://www.r-project.org/.Windows: Click Download R Windows, select “base,”\ndownload latest version.Windows: Click Download R Windows, select “base,”\ndownload latest version.MacOS: Click Download R macOS choose correct\nversion system.MacOS: Click Download R macOS choose correct\nversion system.Install R double-clicking downloaded installer following\n-screen instructions. Use default options unless specific\nneeds arise.Install R double-clicking downloaded installer following\n-screen instructions. Use default options unless specific\nneeds arise.Step 2: Download RStudioGo RStudio official download page:\nhttps://posit.co/download/rstudio-desktop/.Go RStudio official download page:\nhttps://posit.co/download/rstudio-desktop/.Click Download “RStudio Desktop - Open Source License.”Click Download “RStudio Desktop - Open Source License.”Select version suitable operating system:\nWindows: .exe file\nMacOS: .dmg file\nSelect version suitable operating system:Windows: .exe fileWindows: .exe fileMacOS: .dmg fileMacOS: .dmg fileStep 3: Install RStudioLocate downloaded file double-click start \ninstallation.\nWindows: Run .exe installer follow wizard\nsteps.\nMacOS: Drag RStudio icon Applications folder.\nLocate downloaded file double-click start \ninstallation.Windows: Run .exe installer follow wizard\nsteps.Windows: Run .exe installer follow wizard\nsteps.MacOS: Drag RStudio icon Applications folder.MacOS: Drag RStudio icon Applications folder.installation, launch RStudio.installation, launch RStudio.Step 4: Launch RStudioOpen RStudio clicking shortcut created installation \nsearching “RStudio” system’s application launcher.Open RStudio clicking shortcut created installation \nsearching “RStudio” system’s application launcher.RStudio automatically detect R installation link \n.RStudio automatically detect R installation link \n.Step 5: Familiarize RStudio InterfaceRStudio four main panels:Console (Bottom-left): run R commands.Console (Bottom-left): run R commands.Source (Top-left): writing editing scripts.Source (Top-left): writing editing scripts.Environment/History (Top-right): Displays objects, variables,\ncommand history.Environment/History (Top-right): Displays objects, variables,\ncommand history.Plots/Files/Help (Bottom-right): Displays plots, files, R\ndocumentation.Plots/Files/Help (Bottom-right): Displays plots, files, R\ndocumentation.Step 1: Understand R PackagesR packages collections functions, data, documentation \nextend R’s capabilities. packages hosted CRAN,\nBioconductor, GitHub.Step 2: Install CRAN PackagesBasic Installation: Use install.packages() function \ninstall packages CRAN. example: command downloads \ninstalls ggplot2 package.\n\ninstall.packages(\"ggplot2\") \nLoad Package: installation, load package using:\nloaded, can use functions.\n\nlibrary(ggplot2) Basic Installation: Use install.packages() function \ninstall packages CRAN. example: command downloads \ninstalls ggplot2 package.Load Package: installation, load package using:\nloaded, can use functions.Step 3: Install Bioconductor PackagesBioconductor hosts many bioinformatics packages. install, follow\nsteps:Install BiocManager:\n\ninstall.packages(\"BiocManager\") Install BiocManager:Install Bioinformatics Packages: Use BiocManager::install() \ninstall Bioconductor packages. Example: installs ggtree\npackage.\n\nBiocManager::install(\"ggtree\") Install Bioinformatics Packages: Use BiocManager::install() \ninstall Bioconductor packages. Example: installs ggtree\npackage.Load Package:\n\nlibrary(ggtree)Load Package:Step 4: Install GitHub PackagesSome specialized packages hosted GitHub. install :Install remotes devtools:\n\ninstall.packages(\"remotes\") Install remotes devtools:Install Package GitHub: Use remotes::install_github().\nexample: installs GAPIT3 package GWAS analysis.\n\nremotes::install_github(\"jiabowang/GAPIT3\")  Install Package GitHub: Use remotes::install_github().\nexample: installs GAPIT3 package GWAS analysis.Load Package:\n\nlibrary(GAPIT3) Load Package:Step 5: Update R PackagesTo update installed packages:\n\nupdate.packages(ask = FALSE) update installed packages:Bioconductor packages:\n\nBiocManager::install(update = TRUE) Bioconductor packages:Step 6: Uninstall Package (Needed)need remove package:Summary Installation MethodsStep 1: Download PLINK FileVisit PLINK website.Visit PLINK website.Download Linux 64-bit version, compatible \nFASTER \nGrace\nsystem.Download Linux 64-bit version, compatible \nFASTER \nGrace\nsystem.Step 2: Extract Upload PLINK File TAMU HPRCExtract downloaded PLINK file (e.g., plink_linux_x86_64).Extract downloaded PLINK file (e.g., plink_linux_x86_64).Upload extracted PLINK folder TAMU HPRC via file transfer\nmethod prefer. example:\nCreate Upload folder home directory\n(/home/<username>/Upload) scratch\n(/scratch/user/<username>/Upload).\nPlace PLINK folder (plink_linux_x86_64) inside \ndirectory.\nUpload extracted PLINK folder TAMU HPRC via file transfer\nmethod prefer. example:Create Upload folder home directory\n(/home/<username>/Upload) scratch\n(/scratch/user/<username>/Upload).Create Upload folder home directory\n(/home/<username>/Upload) scratch\n(/scratch/user/<username>/Upload).Place PLINK folder (plink_linux_x86_64) inside \ndirectory.Place PLINK folder (plink_linux_x86_64) inside \ndirectory.Step 3: Open Terminal TAMU HPRCLog TAMU HPRC portal.Log TAMU HPRC portal.Navigate working directory PLINK file uploaded\n(e.g. /home/<username>/Upload/plink_linux_x86_64).Navigate working directory PLINK file uploaded\n(e.g. /home/<username>/Upload/plink_linux_x86_64).Click >_ Open Terminal access terminal interface.Click >_ Open Terminal access terminal interface.Step 4: Verify Current DirectoryIn terminal, run command $\npwd terminal, run command $Confirm directory PLINK file \nlocated. example:\n /home/<username>/Upload/plink_linux_x86_64 Confirm directory PLINK file \nlocated. example:Step 5: Make PLINK File Executable Test ItIn terminal, navigate PLINK folder already :\ncd /home/<username>/Upload/plink_linux_x86_6 terminal, navigate PLINK folder already :Run following commands:\nchmod +x plink\n./plink --help\nchmod +x plink: Grants PLINK file executable\npermissions.\n./plink --help: Runs PLINK executable displays\nhelp information confirm proper setup.\nRun following commands:chmod +x plink: Grants PLINK file executable\npermissions../plink --help: Runs PLINK executable displays\nhelp information confirm proper setup.Step 6: Upload Data Use PLINKUpload data files (e.g., .bed, .bim, .fam files) \nworking directory (/home/<username>/Upload/plink_linux_x86_64).Upload data files (e.g., .bed, .bim, .fam files) \nworking directory (/home/<username>/Upload/plink_linux_x86_64).Use PLINK commands process data.Use PLINK commands process data.Example: Converting .bfile .vcfAssuming .bed, .bim, .fam files named data.bed,\ndata.bim, data.fam, use following command:\n./plink --bfile data --recode vcf --data Assuming .bed, .bim, .fam files named data.bed,\ndata.bim, data.fam, use following command:generate VCF file named data.vcf current\ndirectory.","code":"\ninstall.packages(\"ggplot2\") \nlibrary(ggplot2) \ninstall.packages(\"BiocManager\") \nBiocManager::install(\"ggtree\") \nlibrary(ggtree)\ninstall.packages(\"remotes\") \nremotes::install_github(\"jiabowang/GAPIT3\")  \nlibrary(GAPIT3) \nupdate.packages(ask = FALSE) \nBiocManager::install(update = TRUE) \nremove.packages(\"ggplot2\") pwd  /home/<username>/Upload/plink_linux_x86_64 cd /home/<username>/Upload/plink_linux_x86_6 chmod +x plink./plink --help./plink --bfile data --recode vcf --out data "},{"path":"preface.html","id":"acknowledgements","chapter":"Preface","heading":"Acknowledgements","text":"deeply grateful contributions, support, perspectives\nindividuals organizations helped move project\nforward.like extend sincere thanks Dr. Endang Septiningsih\nDr. Michael Thomson hosting us Texas &M University. also\ngreatly appreciate support provided International Agriculture\nCenter, National Chung Hsing University, Higher Education Sprout\nProject, Ministry Education, Taiwan, offering opportunities \npartial financial support research program.","code":""},{"path":"sec-genotype-data.html","id":"sec-genotype-data","chapter":"1 Genotype Data","heading":"1 Genotype Data","text":"\nchapter, focus constructing genotypic dataset \nSNP-Seek (3K Rice Genome). begin downloading relevant SNP\ndata, ensuring sample identifiers align correctly phenotypic\ndataset. Next, perform quality control steps—filtering \nlow-quality SNPs removing problematic samples—obtain robust set\nmarkers suitable GWAS. resulting, cleaned genotype data forms\nfoundation subsequent analyses presented later chapters.\nDownload Rice SNP data SNP-Seek (3K RG)Download Rice SNP data SNP-Seek (3K RG)Align Accession IDsAlign Accession IDsSNP Data Processing Quality ControlSNP Data Processing Quality ControlGenerate Final Genotypic dataGenerate Final Genotypic data","code":""},{"path":"sec-genotype-data.html","id":"download-rice-snp-data-from-snp-seek-3k-rg","chapter":"1 Genotype Data","heading":"1.1 Download Rice SNP data from SNP-Seek (3K RG)","text":"Data repository 3K RG, hosted IRRI:\nhttps://snpseekv3.irri-e-extension.com/v2/download.zul3K RG 18mio Base SNP Dataset: base SNP set consisting \napproximately 18 million SNPs derived initial ~29\nmillion biallelic SNPs excluding excessive number\nheterozygous calls.3K RG 18mio Base SNP Dataset: base SNP set consisting \napproximately 18 million SNPs derived initial ~29\nmillion biallelic SNPs excluding excessive number\nheterozygous calls.Mapping\ntable:\nNCBI SRA accession IDs 3K RG assay IDs.Mapping\ntable:\nNCBI SRA accession IDs 3K RG assay IDs.Please download PLINK .bed, .bim, .fam files 3K RG\n18mio Base SNP Dataset. downloading, extract files \nrename IRRI_18M_3024``.bed, IRRI_18M_3024.bim, \nIRRI_18M_3024.fam files. Also, download save Mapping\ntable\n.csv file reference.\nreference genome datasets ‘Nipponbare\nMSU7/IRGSP1.0’.\n","code":""},{"path":"sec-genotype-data.html","id":"align-accession-ids","chapter":"1 Genotype Data","heading":"1.2 Align Accession IDs","text":"Match accession IDs phenotypic data SNP datasets. \nidentified three issues related inconsistencies spelling,\nformatting, ranking ID names phenotype genotype\ndata: (1) ID names phenotype data must correspond precisely\ngenotype datasets, using Mapping Table \nreference. (2) format ID names Mapping Table \ninconsistent format used phenotype data. (3) \ngenotype data, rank order ID names follow correct\nsequence. example, correct order : IRIS_313-8890,\nIRIS_313-9101, IRIS_313-11657, IRIS_313-11657,\nIRIS_313-8890, IRIS_313-9101.Input:Pheno_327_unranked.csvOutputs:Pheno_327_ranked.csv\nPhenotypic data sorted reorganized.Pheno_327_ranked.csv\nPhenotypic data sorted reorganized.Pheno_327_ID.txt\ntext file containing list IDs.Pheno_327_ID.txt\ntext file containing list IDs.","code":"\n##### R CODES #####\n\n# Set the working directory\nsetwd(\"...your file path...\")\n\n# Load the phenotypic data from IRRI\nPheno_327_unranked = read.csv(\"Pheno_327_unranked.csv\") \n\nwhich(Pheno_327_unranked$DNA_ID == \"IRIS_313-7620\") # 253\nwhich(Pheno_327_unranked$DNA_ID == \"IRIS_313-9989\") # 327\nwhich(Pheno_327_unranked$DNA_ID == \"IRIS_313-10020\") # 5\nwhich(Pheno_327_unranked$DNA_ID == \"IRIS_313-15902\") # 252\n\n# Rearrange the data frame to exclude specific entries\nPheno_327_ranked = Pheno_327_unranked[c(1:4, 253:327, 5:252), ]\n\n# Save the sorted and rearranged data frame to a CSV file\nwrite.csv(Pheno_327_ranked, \"Pheno_327_ranked.csv\", row.names = F)\n\n# Export a text file with the IDs for further analysis\nwrite.table(cbind(Pheno_327_ranked$DNA_ID, Pheno_327_ranked$DNA_ID), \"Pheno_327_ID.txt\", row.names = F, col.names = F, quote = F)"},{"path":"sec-genotype-data.html","id":"snp-data-processing-and-quality-control","chapter":"1 Genotype Data","heading":"1.3 SNP Data Processing and Quality Control","text":"Perform data generation quality control SNP data \nsubset 327 samples. Starting 3K Rice Genome 18 million SNP\ndataset (IRRI_18M_3024), dataset filtered missingness,\nreducing 10 million SNPs, refined based minor\nallele frequency (MAF) approximately 1.9 million high-quality SNPs,\nready GWAS.","code":"##### PLINK COMMANDS #####  \n\n# Change your path into the directory of the '3K RG 18mio Base SNP Dataset (IRRI_18M_3024)' \ncd ...your file path...\n\n# Subset dataset to include 327 individuals with phenotype and genotype \n./plink --bfile IRRI_18M_3024 --keep Pheno_327_ID.txt --make-bed --noweb --allow-no-sex --out IRRI_18M_327\n# --keep: Retain specific samples##### PLINK COMMANDS #####\n\n./plink --bfile IRRI_18M_327 --missing\n# --missing: Calculate SNP and sample missing rates  \n# Changes the outcome's filenames into IRRI_18M_327.lmiss and IRRI_18M_327.imiss \n##### R CODES #####\n\n# Set the working directory\nsetwd(\"...your file path...\")\n\n# Visualize SNP missing rates\nlibrary(data.table)\nSNP_miss = fread(\"IRRI_18M_327.lmiss\")\nsummary(SNP_miss$F_MISS)\nhist(SNP_miss$F_MISS, main = \"Histogram of SNP missing rate of IRRI_18M_327\", xlab = \"SNP missing rate\") \n\n# Visualize sample missing rates\nSample_miss = fread(\"IRRI_18M_327.imiss\")\nsummary(Sample_miss$F_MISS)\nhist(Sample_miss$F_MISS, main = \"Histogram of sample missing rate of IRRI_18M_327\", xlab = \"Sample missing rate\") \n\n# Identify SNPs with high missing rates\nloc = which(SNP_miss$F_MISS >= 0.05)\nremove_SNP_list = SNP_miss[loc, 2]\ndim(SNP_miss)[1]-dim(remove_SNP_list)[1] # SNPs passing filters\nwrite.table(remove_SNP_list, \"remove_SNP_list_miss_IRRI_18M_327.txt\", row.names = F, col.names = F, quote = F)##### PLINK COMMANDS #####  \n\n./plink --bfile IRRI_18M_327 --exclude remove_SNP_list_miss_IRRI_18M_327.txt --make-bed --noweb --allow-no-sex --out IRRI_10M_327   \n# --exclude: Remove SNPs with high missing rate\n# -> 10617659 variants and 327 people pass filters and QC  ##### PLINK COMMANDS #####   \n\n./plink --bfile IRRI_10M_327 --missing\n# --missing: calculate SNP and sample missing rates \n# Changes the outcome's filenames into IRRI_10M_327.lmiss and IRRI_10M_327.imiss\n##### R CODES #####    \n\n# Check the sample missing rates for the filtered data \nSample_miss = fread(\"IRRI_10M_327.imiss\") \nsummary(Sample_miss$F_MISS)\nhist(Sample_miss$F_MISS, main = \"Histogram of sample missing rate of IRRI_10M_327\", xlab = \"Sample missing rate\") \n\n# Check the SNP missing rates for the filtered data \nSNP_miss = fread(\"IRRI_10M_327.lmiss\") \nsummary(SNP_miss$F_MISS)\nhist(SNP_miss$F_MISS, main = \"Histogram of SNP missing rate of IRRI_10M_327\", xlab = \"SNP missing rate\") ##### PLINK COMMANDS #####  \n\n./plink --bfile IRRI_10M_327 --freq   \n# --freq: calculate SNP's allele frequency\n##### R CODES #####  \n\n# Visualize minor allele frequency\nfrq_data = fread(\"IRRI_10M_327.frq\") # Load frequency data\nsummary(frq_data$MAF)\nhist(frq_data$MAF, main = \"Histogram of MAF of IRRI_10M_327\", xlab = \"Minor allele frequency\")\n\n# Identify SNPs with low MAF\nloc = which(frq_data$MAF < 0.05)\nremove_SNP_list = frq_data[loc, 2]\ndim(frq_data)[1]-dim(remove_SNP_list)[1] # SNPs passing filters\nwrite.table(remove_SNP_list, \"remove_SNP_list_maf_IRRI_10M_327.txt\", row.names = F, col.names = F, quote = F)##### PLINK COMMANDS #####      \n\n./plink --bfile IRRI_10M_327 --exclude remove_SNP_list_maf_IRRI_10M_327.txt --make-bed --noweb --allow-no-sex --out IRRI_1.9M_327 \n# -> 1972824 variants and 327 people pass filters and QC##### PLINK COMMANDS #####     \n\n./plink --bfile IRRI_1.9M_327 --missing   \n./plink --bfile IRRI_1.9M_327 --freq  \n# Changes the outcome's filenames into IRRI_1.9M_327.lmiss, IRRI_1.9M_327.imiss and IRRI_1.9M_327.frq\n##### R CODES #####  \n\n# Check data quality metrics: missing rate and MAF\n\n# Visualize sample missing rates for the final data\nSample_miss = fread(\"IRRI_1.9M_327.imiss\")\nsummary(Sample_miss$F_MISS)\nhist(Sample_miss$F_MISS, main = \"Histogram of sample missing rate of IRRI_1.9M_327\", xlab = \"Sample missing rate\")\n\n# Visualize SNP missing rates for the final data\nSNP_miss = fread(\"IRRI_1.9M_327.lmiss\")\nsummary(SNP_miss$F_MISS)\nhist(SNP_miss$F_MISS, main = \"Histogram of SNP missing rate of IRRI_1.9M_327\", xlab = \"SNP missing rate\")\n\n# Visualize MAF for the final data\nfrq_data = fread(\"IRRI_1.9M_327.frq\")\nsummary(frq_data$MAF)\nhist(frq_data$MAF, main = \"Histogram of MAF of IRRI_1.9M_327\", xlab = \"Minor allele frequency\")"},{"path":"sec-genotype-data.html","id":"generate-final-genotypic-data","chapter":"1 Genotype Data","heading":"1.4 Generate Final Genotypic data","text":"Prepare final genotypic data GWAS analysis. now need \nconvert QC-passed SNP data PLINK format (.bed, .bim, \n.fam) HapMap format, compatible GAPIT package.prepared genotypic data GWAS analysis, including 327\nsamples 1.9 million SNPs.","code":"##### PLINK COMMANDS #####\n\n# Change your path into the directory of the 'IRRI_1.9M_327'\n# cd ...your file path...\n./plink --bfile IRRI_1.9M_327 --recode vcf --out IRRI_1.9M_327\n##### R CODES #####\n\n# Set the working directory\nsetwd(\"...your file path...\")\n\nlibrary(vcfR)\nvcfR = read.vcfR(\n  \"IRRI_1.9M_327.vcf\",\n  limit = 1e+50,\n  nrows = -1,\n  skip = 0,\n  cols = NULL,\n  convertNA = TRUE,\n  checkFile = TRUE,\n  check_keys = TRUE,\n  verbose = TRUE)\n\nHapMap = vcfR2hapmap(vcfR_test)\nclass(HapMap)\n\nwrite.table(HapMap,\n            file = \"IRRI_1.9M_327.hmp.txt\",\n            sep = \"\\t\",\n            row.names = FALSE,\n            col.names = FALSE)\n\nGeno = read.table(\"IRRI_1.9M_327.hmp.txt\", head = FALSE)\nsaveRDS(Geno, \"Geno.rds\") # Final data for GWAS"},{"path":"sec-phenotype-data.html","id":"sec-phenotype-data","chapter":"2 Phenotype Data","heading":"2 Phenotype Data","text":"\nchapter, explore phenotypic data used\nalongside genotypic data GWAS. start examining descriptive\nstatistics, identifying difference, implementing transformation \nhandle non-normal data. finalize phenotype dataset \nselecting three traits. outcome curated phenotypic dataset,\nready integration genotype data subsequent analyses.\nPhenotypic Data ProcessingPhenotypic Data ProcessingPhenotypic Data VisualizationPhenotypic Data VisualizationPrepare Final Phenotypic DataPrepare Final Phenotypic Data","code":""},{"path":"sec-phenotype-data.html","id":"phenotypic-data-processing","chapter":"2 Phenotype Data","heading":"2.1 Phenotypic Data Processing","text":"aim process clean phenotypic data dataset called\nPheno_327_ranked. dataset contains measurements various\nphenotypic traits collected different experimental conditions,\nincluding controls treatments specified time intervals (e.g., 5,\n7, 14 days control treatment).focus exploring transforming phenotypic data achieve\nnormality, essential many statistical analyses, including\nGWAS. dataset processed (.e. logit transformation) contains\nphenotypic measurements, specifically variable Control_AG_14DAS,\nrepresenting difference control treatment phenotypes \n14 days sowing.AG_14DAS:\n\nAG_14DAS:Control_AG_14DAS:\n\nControl_AG_14DAS:Logit_Control_AG_14DAS:\n\nLogit_Control_AG_14DAS:use logit-transformed data (Logit_Control_AG_14DAS) along\noriginal data (AG_14DAS & Control_AG_14DAS) GWAS\nanalysis.","code":"\n##### R CODES #####\n\n# Set the working directory\nsetwd(\"...your file path...\")\n\n# Load the phenotype data\nPheno_data = read.csv(\"Pheno_327_ranked.csv\")\n\n# Check normality of the original data\ndata = Pheno_data$AG.14\nshapiro.test(data) \nsummary(data)\n# Calculate skewness to assess data symmetry\nlibrary(moments)\nskewness(data)\n# Negative (positive) skewness indicates a left (right) skew\n# Plot the density of the original data\nplot(density(data), main = \"Density plot for original data (Control_AG_14DAS)\")\n# Create a Q-Q plot to visually check normality of the original data\nqqnorm(data, main = \"Q-Q plot for original data (Control_AG_14DAS)\")\nqqline(data, col = \"red\", lwd = 2)\n\n# Apply logit transformation to normalize the data\n# The logit transformation is commonly used to transform probabilities (values between 0 and 1) into the real number line.\nlogit = function(p) {\n  epsilon = 3e-4\n  p = ifelse(p == 0, epsilon, ifelse(p == 1, 1 - epsilon, p))\n  log(p / (1 - p))\n}\n# AG under 14 days\ndata_AG_14 = logit(Pheno_data$AG.14/100)\ndata_Control_14 = logit(Pheno_data$N.14/100)\nLogit_Control_AG_14DAS = data_Control_14 - data_AG_14\n  \nshapiro.test(Logit_Control_AG_14DAS)\nskewness(Logit_Control_AG_14DAS)\nplot(density(Logit_Control_AG_14DAS), main=\"Density plot for logit transformed data (Logit_Control_AG_14DAS)\")\nqqnorm(data, main = \"Q-Q plot for logit transformed data (Logit_Control_AG_14DAS)\")\nqqline(data, col = \"red\", lwd = 2)"},{"path":"sec-phenotype-data.html","id":"phenotypic-data-visualization","chapter":"2 Phenotype Data","heading":"2.2 Phenotypic Data Visualization","text":"aim analyze visualize seed germination data various\nexperimental conditions. analysis centered around comparing\ncontrol treatment groups different time points (7 14 days) \nassess effects treatments seed germination rates.Welch’s t-tests conducted compare seed germination rates\n:Control treatment groups 7 days.Control treatment groups 7 days.Control treatment groups 14 days.Control treatment groups 14 days.Comparison seed germination 7 days versus 14 days.Comparison seed germination 7 days versus 14 days.Seed germination measurement control treatment (7-day)\nSeed germination measurement control treatment (7-day)Seed germination measurement control treatment (14-day)\nSeed germination measurement control treatment (14-day)Comparison seed germination\nComparison seed germination","code":"\n##### R CODES #####\n\n# Set the working directory\nsetwd(\"...your file path...\")\n\n# Load the phenotype data\nPheno_data = read.csv(\"Pheno_327_ranked.csv\")\n\n# Load ggplot2 library for data visualization\nlibrary(ggplot2)\n\n# Seed germination analysis: Control vs Treatment (7-day)\nGroup1 = Pheno_data$N.7\nGroup2 = Pheno_data$AG.7\n\n# Perform Welch Two Sample t-test\nt.test(Group1, Group2) # p-value < 2.2e-16\n\n# Create a data frame for visualization\nID = Pheno_data$DNA_ID\ndata = data.frame(\n  value = c(Group1, Group2),\n  group = rep(c(\"Control_7\", \"Treatment_7\"), each = length(Group1)),\n  id = rep(ID, 2))\n\n# Generate boxplot and jitter plot for 7-day seed germination\nggplot(data, aes(x = group, y = value, group = group)) +\n  geom_boxplot(aes(fill = group), color = \"grey30\", width = 0.65, size = 0.3, alpha = 0.9, outlier.shape = NA) +\n  geom_jitter(width = 0.1, aes(color = group), size = 1.5, alpha = 0.3) +\n  geom_line(aes(group = id), color = \"grey70\", size = 0.1) +\n  theme_classic() +\n  labs(title = \"\", x = \"\", y = \"Seed germination (%)\") +\n  theme(\n    axis.title.x = element_text(size = 18),\n    axis.title.y = element_text(size = 18),\n    axis.text.x = element_text(size = 16, color = \"black\"),\n    axis.text.y = element_text(size = 14),\n    legend.position = \"none\") +\n  scale_fill_manual(values = c(\"Control_7\" = \"#9ABF80\", \"Treatment_7\" = \"#E38E49\")) +\n  scale_color_manual(values = c(\"Control_7\" = \"#9ABF80\", \"Treatment_7\" = \"#E38E49\")) +\n  scale_x_discrete(labels = c(\"Control_7\" = \"Control (7-day)\", \"Treatment_7\" = \"Treatment (7-day)\")) +\n  annotate(\"segment\", x = 1, xend = 2, y = 108, yend = 108, linewidth = 0.8, color = \"black\") +\n  annotate(\"segment\", x = 1, xend = 1, y = 108, yend = 105, linewidth = 0.8, color = \"black\") +\n  annotate(\"segment\", x = 2, xend = 2, y = 108, yend = 105, linewidth = 0.8, color = \"black\") +\n  annotate(\"text\", x = 1.5, y = 110, label = paste(\"***\"), size = 6, hjust = 0.5) # 5 x 5\n\n# Seed germination analysis: Control vs Treatment (14-day)\nGroup1 = Pheno_data$N.14\nGroup2 = Pheno_data$AG.14\n\n# Perform Welch Two Sample t-test\nt.test(Group1, Group2) # p-value < 2.2e-16\n\n# Create a data frame for visualization\ndata = data.frame(\n  value = c(Group1, Group2),\n  group = rep(c(\"Control_14\", \"Treatment_14\"), each = length(Group1)),\n  id = rep(ID, 2))\n\n# Generate boxplot and jitter plot for 14-day seed germination\nggplot(data, aes(x = group, y = value, group = group)) +\n  geom_boxplot(aes(fill = group), color = \"grey30\", width = 0.65, size = 0.3, alpha = 0.9, outlier.shape = NA) +\n  geom_jitter(width = 0.1, aes(color = group), size = 1.5, alpha = 0.3) +\n  geom_line(aes(group = id), color = \"grey70\", size = 0.1) +\n  theme_classic() +\n  labs(title = \"\", x = \"\", y = \"Seed germination (%)\") +\n  theme(\n    axis.title.x = element_text(size = 18),\n    axis.title.y = element_text(size = 18),\n    axis.text.x = element_text(size = 16, color = \"black\"),\n    axis.text.y = element_text(size = 14),\n    legend.position = \"none\") +\n  scale_fill_manual(values = c(\"Control_14\" = \"#9ABF80\", \"Treatment_14\" = \"#E38E49\")) +\n  scale_color_manual(values = c(\"Control_14\" = \"#9ABF80\", \"Treatment_14\" = \"#E38E49\")) +\n  scale_x_discrete(labels = c(\"Control_14\" = \"Control (14-day)\", \"Treatment_14\" = \"Treatment (14-day)\")) +\n  annotate(\"segment\", x = 1, xend = 2, y = 108, yend = 108, linewidth = 0.8, color = \"black\") +\n  annotate(\"segment\", x = 1, xend = 1, y = 108, yend = 105, linewidth = 0.8, color = \"black\") +\n  annotate(\"segment\", x = 2, xend = 2, y = 108, yend = 105, linewidth = 0.8, color = \"black\") +\n  annotate(\"text\", x = 1.5, y = 110, label = paste(\"***\"), size = 6, hjust = 0.5) # 5 x 5\n\n# Comparison of seed germination between Control groups (7-day vs 14-day)\nGroup1 = Pheno_data$NminusAG.7\nGroup2 = Pheno_data$NminusAG.14\n\n# Perform Welch Two Sample t-test\nt.test(Group1, Group2) # p-value = 7.493e-10\n\n# Create a data frame for visualization\ndata = data.frame(\n  value = c(Group1, Group2),\n  group = rep(c(\"Group1\", \"Group2\"), each = length(Group1)),\n  id = rep(ID, 2))\n\n# Generate boxplot and jitter plot for comparison\nggplot(data, aes(x = group, y = value, group = group)) +\n  geom_boxplot(aes(fill = group), color = \"grey30\", width = 0.65, size = 0.3, alpha = 0.9, outlier.shape = NA) +\n  geom_jitter(width = 0.1, aes(color = group), size = 1.5, alpha = 0.3) +\n  geom_line(aes(group = id), color = \"grey70\", size = 0.1) +\n  theme_classic() +\n  labs(title = \"\", x = \"\", y = \"Comparison of seed germination (%)\") +\n  theme(\n    axis.title.x = element_text(size = 18),\n    axis.title.y = element_text(size = 18),\n    axis.text.x = element_text(size = 16, color = \"black\"),\n    axis.text.y = element_text(size = 14),\n    legend.position = \"none\") +\n  scale_fill_manual(values = c(\"Group1\" = \"#D39D55\", \"Group2\" = \"#500000\")) +\n  scale_color_manual(values = c(\"Group1\" = \"#D39D55\", \"Group2\" = \"#500000\")) +\n  scale_x_discrete(labels = c(\"Group1\" = \"7-day\", \"Group2\" = \"14-day\")) +\n  annotate(\"segment\", x = 1, xend = 2, y = 108, yend = 108, linewidth = 0.8, color = \"black\") +\n  annotate(\"segment\", x = 1, xend = 1, y = 108, yend = 105, linewidth = 0.8, color = \"black\") +\n  annotate(\"segment\", x = 2, xend = 2, y = 108, yend = 105, linewidth = 0.8, color = \"black\") +\n  annotate(\"text\", x = 1.5, y = 110, label = paste(\"***\"), size = 6, hjust = 0.5) # 5 x 5"},{"path":"sec-phenotype-data.html","id":"prepare-final-phenotypic-data","chapter":"2 Phenotype Data","heading":"2.3 Prepare Final Phenotypic Data","text":"generate final phenotypic data GWAS analysis. resulting\nPheno object optimized seamless use GWAS workflows.Outputs:Pheno.rds\nPhenotypic dataset ‘data.frame’ format stored .rds file.\nReady GWAS.","code":"\n##### R CODES #####\n\n# Set the working directory\nsetwd(\"...your file path...\")\n\n# Read the cleaned and sorted phenotypic data from a CSV file\nPheno_327_ranked = read.csv(\"Pheno_327_ranked.csv\")\n\n# Create a new data frame with selected columns and a modified Taxa column\nPheno = data.frame(Taxa = paste(Pheno_327_ranked$DNA_ID, Pheno_327_ranked$DNA_ID, sep = \"_\"),\n                   AG_14DAS = Pheno_327_ranked$AG.14,\n                   Control_AG_14DAS = Pheno_327_ranked$NminusAG.14,\n                   Logit_Control_AG_14DAS = Pheno_327_ranked$logitDiffN_AG.14)\n\n# Save the new data frame as an RDS file for future use\nsaveRDS(Pheno, \"Pheno.rds\") # Final data"},{"path":"sec-phenotype-data.html","id":"summary","chapter":"2 Phenotype Data","heading":"2.4 Summary","text":"prepared phenotypic dataset specifically designed GWAS\nanalysis, includes following four traits:AG_14DAS: Seed germination rates treatment conditions \n14 days.AG_14DAS: Seed germination rates treatment conditions \n14 days.Control_AG_14DAS: difference seed germination rates\ncontrol treatment groups 14 days.Control_AG_14DAS: difference seed germination rates\ncontrol treatment groups 14 days.Logit_Control_AG_14DAS: Log-transformed data difference\nseed germination rates control treatment groups 14\ndays.Logit_Control_AG_14DAS: Log-transformed data difference\nseed germination rates control treatment groups 14\ndays.","code":""},{"path":"sec-gw.html","id":"sec-gw","chapter":"3 GWAS","heading":"3 GWAS","text":"\nchapter, conduct genome-wide association study (GWAS)\nlink genotypic variation phenotypic traits interest. \nsystematically scanning genome marker-trait associations, \nidentify loci may influence traits question. chapter\nconcludes initial interpretations significant associations\ndiscovered.\nConduct GWAS Analysis Collect ResultsConduct GWAS Analysis Collect ResultsPreview GWAS ResultsPreview GWAS Results","code":""},{"path":"sec-gw.html","id":"gwas-analysis","chapter":"3 GWAS","heading":"3.1 GWAS Analysis","text":"used GAPIT\nR package, offers multiple GWAS models, conduct GWAS analyses.Four separate GWAS results (PCA.total = 2, 3, 4, 5) stored \nfiles GWAS_PC2 GWAS_PC5. Create GWAS_PC2, GWAS_PC3,\nGWAS_PC4, GWAS_PC5 folder directory. analysis, \napplied five models simultaneously: GLM, MLM, MLMM, FarmCPU, BLINK.\nGenotypic dataset (Geno.rds): 327 samples 1.9 million SNPs.\nPhenotypic dataset (Pheno.rds): 327 samples 3 traits.\n","code":"\n##### R CODES #####\n\n# Set the working directory for initial setup\nsetwd(\"...change...\")\n\n# Load genotype and phenotype data\nGeno = readRDS(\"Geno.rds\")\nPheno = readRDS(\"Pheno.rds\") \n# 3 traits: AG_14DAS; Control_AG_14DAS; Logit_Control_AG_14DAS\n\n# Load the GAPIT library for GWAS analysis \ninstall.packages(\"devtools\")\ndevtools::install_github(\"jiabowang/GAPIT\", force = TRUE)\nlibrary(GAPIT)\n\n# Set the working directory for GWAS_PC2 analysis\nsetwd(\"...change.../GWAS_PC2\")\n\n# Perform GWAS analysis using different models and 2 principal components\nGAPIT = GAPIT(\n  Y = Pheno,\n  G = Geno,\n  model = c(\"GLM\", \"MLM\", \"MLMM\", \"FarmCPU\", \"Blink\"),\n  PCA.total = 2,\n  Multiple_analysis = TRUE)\n\n# Set the working directory for GWAS_PC3 analysis\nsetwd(\"...change.../GWAS_PC3\")\n\n# Perform GWAS analysis using different models and 3 principal components\nGAPIT = GAPIT(\n  Y = Pheno,\n  G = Geno,\n  model = c(\"GLM\", \"MLM\", \"MLMM\", \"FarmCPU\", \"Blink\"),\n  PCA.total = 3,\n  Multiple_analysis = TRUE)\n\n# Set the working directory for GWAS_PC4 analysis\nsetwd(\"...change.../GWAS_PC4\")\n\n# Perform GWAS analysis using different models and 4 principal components\nGAPIT = GAPIT(\n  Y = Pheno,\n  G = Geno,\n  model = c(\"GLM\", \"MLM\", \"MLMM\", \"FarmCPU\", \"Blink\"),\n  PCA.total = 4,\n  Multiple_analysis = TRUE)\n\n# Set the working directory for GWAS_PC5 analysis\nsetwd(\"...change.../GWAS_PC5\")\n\n# Perform GWAS analysis using different models and 5 principal components\nGAPIT = GAPIT(\n  Y = Pheno,\n  G = Geno,\n  model = c(\"GLM\", \"MLM\", \"MLMM\", \"FarmCPU\", \"Blink\"),\n  PCA.total = 5,\n  Multiple_analysis = TRUE)"},{"path":"sec-gw.html","id":"preview-the-gwas-results","chapter":"3 GWAS","heading":"3.2 Preview the GWAS Results","text":"GAPIT.Association.Filter_GWAS_results.csv: \nsignificant SNP markers selected models phenotypic\ntraits.GAPIT.Association.Filter_GWAS_results.csv: \nsignificant SNP markers selected models phenotypic\ntraits.GAPIT.Association.Manhattan_Geno.Model.Trait.pdf: Genome-wide\nManhattan plots model specific phenotypic trait.GAPIT.Association.Manhattan_Geno.Model.Trait.pdf: Genome-wide\nManhattan plots model specific phenotypic trait.results: included significant SNP markers \nFarmCPU BLINK (newest models) associated \nControl_AG_14DAS (difference seed germination rates \ncontrol treatment groups 14 days).GWAS_PC2\nBLINK: Chr02: 24380499; Chr03: 17005606; Chr03: 32521809; Chr10:\n15165249\nGWAS_PC2BLINK: Chr02: 24380499; Chr03: 17005606; Chr03: 32521809; Chr10:\n15165249GWAS_PC3\nFarmCPU: Chr03: 17005606; Chr07: 18136942; Chr07: 22535556;\nChr10: 19883513; Chr11: 18075487\nBLINK: Chr03: 17005606; Chr03: 32521809; Chr10: 15162418\nGWAS_PC3FarmCPU: Chr03: 17005606; Chr07: 18136942; Chr07: 22535556;\nChr10: 19883513; Chr11: 18075487FarmCPU: Chr03: 17005606; Chr07: 18136942; Chr07: 22535556;\nChr10: 19883513; Chr11: 18075487BLINK: Chr03: 17005606; Chr03: 32521809; Chr10: 15162418BLINK: Chr03: 17005606; Chr03: 32521809; Chr10: 15162418GWAS_PC4\nFarmCPU: Chr03: 17000165; Chr06: 12865843; Chr06: 27384104;\nChr10: 19883513\nBLINK: Chr03: 17005606; Chr03: 32521809; Chr9: 12290639\nGWAS_PC4FarmCPU: Chr03: 17000165; Chr06: 12865843; Chr06: 27384104;\nChr10: 19883513FarmCPU: Chr03: 17000165; Chr06: 12865843; Chr06: 27384104;\nChr10: 19883513BLINK: Chr03: 17005606; Chr03: 32521809; Chr9: 12290639BLINK: Chr03: 17005606; Chr03: 32521809; Chr9: 12290639GWAS_PC5\nFarmCPU: Chr01: 37357384; Chr03: 17005606; Chr10: 19883513\nBLINK: Chr03: 17005606; Chr03: 32521809; Chr10: 15165249\nGWAS_PC5FarmCPU: Chr01: 37357384; Chr03: 17005606; Chr10: 19883513FarmCPU: Chr01: 37357384; Chr03: 17005606; Chr10: 19883513BLINK: Chr03: 17005606; Chr03: 32521809; Chr10: 15165249BLINK: Chr03: 17005606; Chr03: 32521809; Chr10: 15165249","code":""},{"path":"sec-post-gwas.html","id":"sec-post-gwas","chapter":"4 Post-GWAS","heading":"4 Post-GWAS","text":"\nchapter delve post-GWAS analyses dissect\nvalidate significant associations identified GWAS.\nPotential steps include fine-mapping loci, candidate gene\nexploration, functional annotation, predictive modeling. \ncomplementary investigations aim clarify biological relevance \ndiscovered markers move us closer practical applications \nbreeding research.\nThree significant SNPs based BLINK model PCA.total = 5:Chr03: 17005606 (SNP ID: 96208338)Chr03: 17005606 (SNP ID: 96208338)Chr03: 32521809 (SNP ID: 111729982)Chr03: 32521809 (SNP ID: 111729982)Chr10: 15162418 (SNP ID: 308650519)Chr10: 15162418 (SNP ID: 308650519)Use significant SNPs detected BLINK PCA.total = 5 \npinpoint regions associated seed germination.Use significant SNPs detected BLINK PCA.total = 5 \npinpoint regions associated seed germination.Also, consider linkage disequilibrium (LD) decay rate \npopulation define size candidate genomic region around\nsignificant SNP. -> Click\n!Also, consider linkage disequilibrium (LD) decay rate \npopulation define size candidate genomic region around\nsignificant SNP. -> Click\n!Examine local LD structure (e.g., haplotype blocks) ensure \nidentified region accurately confined areas strong linkage.Examine local LD structure (e.g., haplotype blocks) ensure \nidentified region accurately confined areas strong linkage.Use external resources, databases, literature explore known\ngenes, QTLs, functional annotations within candidate\ngenomic region.Use external resources, databases, literature explore known\ngenes, QTLs, functional annotations within candidate\ngenomic region.Determine favorable alleles significant SNP haplotype\nwhether associated higher germination aerobic\nconditions.Determine favorable alleles significant SNP haplotype\nwhether associated higher germination aerobic\nconditions.","code":""},{"path":"sec-post-gwas.html","id":"chr03-17005606","chapter":"4 Post-GWAS","heading":"4.1 Chr03: 17005606","text":"plot displays candidate region within 200 Kb (0.2Mb)\nupstream downstream significant SNPs (Chr03: 17005606).plot displays candidate region within 200 Kb (0.2Mb)\nupstream downstream significant SNPs (Chr03: 17005606).p-values based BLINK model PCA.total = 5.p-values based BLINK model PCA.total = 5.color SNP reflects LD (r2) value peak\nSNP.color SNP reflects LD (r2) value peak\nSNP.peak SNP (Chr03: 17005606)highly correlated (r2>0.8) \nmarkers within 1.675 1.710 Mb.peak SNP (Chr03: 17005606)highly correlated (r2>0.8) \nmarkers within 1.675 1.710 Mb.13 genes within region (1.675 1.710 Mb).\nhttps://rice.uga.edu/jb2/?session=share-LvzOvIFUlH&password=dz7dn13 genes within region (1.675 1.710 Mb).\nhttps://rice.uga.edu/jb2/?session=share-LvzOvIFUlH&password=dz7dnPromising gene:\nLOC_Os03g29460\n(Chr3:16,787,178..16,787,968) high gene expression mature\nseed hypoxia.Promising gene:\nLOC_Os03g29460\n(Chr3:16,787,178..16,787,968) high gene expression mature\nseed hypoxia.","code":"##### PLINK COMMANDS #####     \n\n# Change your path into the directory of the 'IRRI_1.9M_327'   \ncd ...your file path...  \n\n# Creat a \"Peak_SNP_96208338.txt\" file in your path, this txt file only contains the peak SNP ID \"96208338\".   \n\n# Copy this SNP ID -> 96208338  \n# Paste in the -> \"Peak_SNP_96208338.txt\"  \n\n# Calculating Pairwise LD (r²) around the Peak SNP \n./plink --bfile IRRI_1.9M_327 --set-hh-missing --r2 --ld-snp-list Peak_SNP_96208338.txt --ld-window-r2 0 --ld-window 99999 --ld-window-kb 2000 --out SNP_96208338_LD \n\n# --set-hh-missing: Converts any genotypes flagged as \"heterozygous haploid (hh)\" into missing genotypes.  \n# --r2: Tells PLINK to compute the pairwise linkage disequilibrium metric r² for the specified SNP(s).  \n# --ld-snp-list Peak_SNP_96208338.txt: Reads in a file containing a list of SNP IDs (in this case, it contains the single peak SNP ID 96208338). PLINK will calculate LD between the listed SNP(s) and all other SNPs within the specified windows.  \n# --ld-window-r2 0: Sets the minimum r² threshold to \"0\", meaning no SNPs will be excluded based on r². Essentially, all pairwise LD calculations with the target SNP is performed.  \n# --ld-window 99999: Defines the maximum number of SNPs (on each side of the target SNP) to include in the LD calculation. Using a very large number \"99999\" effectively removes any SNP-count-based restriction.  \n# --ld-window-kb 2000: Sets the genomic window size to \"2000 kb\" around the target SNP. Only SNPs within ±2000 kb of the peak SNP will be considered in the LD calculation. \n# --out SNP_96208338_LD: Specifies the output file prefix. PLINK will produce output files (e.g., SNP_96208338_LD.ld) containing LD statistics.##### PLINK COMMANDS #####   \n\n# Change your path into the directory of the 'IRRI_1.9M_327'   \ncd ...your file path...  \n\n./plink --bfile IRRI_1.9M_327 --snp 96208338 --window 4000 --make-bed --noweb --allow-no-sex --out IRRI_96208338_327\n\n# --snp 96208338: Specifies the central SNP around which a window of data will be extracted.\n# --window 4000: Defines a ±2000 kb window on each side of the SNP (total of \"4000\" kb) to be extracted for the new dataset.\n# --out IRRI_96208338_327: Sets the prefix for the output files generated by this command (e.g., IRRI_96208338_327.bed, .bim, .fam).\n##### R CODES #####  \n\n# -> Create a folder (e.g. Chr03_17005606)\n\n# Set the working directory \nsetwd(\"...your file path.../Chr03_17005606\")  \n\n# Put the GWAS, LD, and windowed subset results into this folder \n# I use the GWAS result based on Blink (PC=5)\n# -> GAPIT.Association.Filter_GWAS_results.csv\n# -> SNP_96208338_LD.ld\n# -> IRRI_96208338_327.bed, .bim, .fam\n\nlibrary(data.table)\n\n# Import GWAS results (BLINK with PCA.total=5)\nBlink_PC5 = fread(\"GAPIT.Association.GWAS_Results.BLINK.Control_AG_14DAS.csv\") \nBlink_PC5 = as.data.frame(Blink_PC5)\n\n# Import subset region\nRegion_96208338 = fread(\"IRRI_96208338_327.bim\")\nRegion_96208338 = as.data.frame(Region_96208338[, c(1:2, 4)])\ncolnames(Region_96208338) = c(\"Chr\", \"ID\", \"Pos\")\n\n# Import LD file\nLD_96208338 = fread(\"SNP_96208338_LD.ld\"); head(LD_96208338); tail(LD_96208338)\nLD_96208338 = as.data.frame(LD_96208338)\n\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(dplyr)\n\n# Selecting common SNPs and extracting associated values\nSNP = intersect(Region_96208338$ID, LD_96208338$SNP_B)\nLD_value = LD_96208338[which(LD_96208338$SNP_B %in% SNP), 7]\nP_value = Blink_PC5[which(Blink_PC5$SNP %in% SNP), 4]\nMAF_value = Blink_PC5[which(Blink_PC5$SNP %in% SNP), 5]\nBHadj_P_value = Blink_PC5[which(Blink_PC5$SNP %in% SNP), 7]\nEffect_value  = Blink_PC5[which(Blink_PC5$SNP %in% SNP), 8]\n\n# Data wrangling for the region of interest\nChr03_17005606 = Region_96208338 %>%\n  mutate(Light = ifelse(Pos >= 17005606-200000 & Pos <= 17005606+200000, \"1\", \"2\")) %>%\n  mutate(LD = LD_value) %>%\n  mutate(pvalue = P_value) %>%\n  mutate(MAF = MAF_value) %>%\n  mutate(adjP = BHadj_P_value) %>%\n  mutate(Effect = Effect_value)\n\n# Plotting with ggplot2\nggplot_obj = ggplot() +\n  geom_point(\n    data = subset(Chr03_17005606, LD < 0.8),\n    aes(\n      x = Pos,\n      y = -log10(pvalue),\n      color = LD,\n      text = paste0(\n        \"Pos: \", Pos,\n        \"\\n-log10(p): \", round(-log10(pvalue), 3),\n        \"\\n-log10(adj. p): \", round(-log10(adjP), 3),\n        \"\\nLD: \", round(LD, 3),\n        \"\\nMAF: \", round(MAF, 3),\n        \"\\nEffect: \", round(Effect, 3)\n      )\n    ),\n    alpha = 0.6, size = 2\n  ) +\n  geom_point(\n    data = subset(Chr03_17005606, LD >= 0.8),\n    aes(\n      x = Pos,\n      y = -log10(pvalue),\n      color = LD,\n      text = paste0(\n        \"Pos: \", Pos,\n        \"\\n-log10(p): \", round(-log10(pvalue), 3),\n        \"\\n-log10(adj. p): \", round(-log10(adjP), 3),\n        \"\\nLD: \", round(LD, 3),\n        \"\\nMAF: \", round(MAF, 3),\n        \"\\nEffect: \", round(Effect, 3)\n      )\n    ),\n    alpha = 0.8, size = 2\n  ) +\n  scale_color_gradient(\n    low = \"#6798d4\",\n    high = \"#e3393a\",\n    limits = c(0, 1),\n    breaks = c(0.0, 0.5, 1.0),\n    labels = c(\"0.0\", \"0.5\", \"1.0\")\n  ) +\n  scale_x_continuous(\n    breaks = c(15000000, 16000000, 17000000, 18000000, 19000000),\n    labels = c(\"1.5\", \"1.6\", \"1.7\", \"1.8\", \"1.9\")\n  ) +\n  scale_y_continuous(limits = c(0, 13), breaks = c(0, 4, 8, 12)) +\n  labs(x = \"Position (Mb)\", y = \"-log(p)\") +\n  guides(color = guide_colorbar(\n    title = expression(r^2),\n    title.position = \"top\",\n    title.hjust = 0.5\n  )) +\n  theme_minimal() +\n  theme(\n    legend.title = element_text(size = 16),\n    legend.text = element_text(size = 14),\n    legend.position = c(0.95, 0.95),\n    legend.justification = c(\"right\", \"top\"),\n    legend.direction = \"horizontal\",\n    legend.box.just = \"top\",\n    legend.margin = margin(4, 4, 4, 4),\n    plot.background = element_blank(),\n    panel.grid.minor = element_blank(),\n    axis.text.x = element_text(size = 16),\n    axis.text.y = element_text(size = 16),\n    axis.title.y = element_text(size = 18),\n    axis.title.x = element_text(size = 18)\n  )\nggplot_obj # A6\n\n# Plotting with interactive Plotly visualization\nggplotly(ggplot_obj, tooltip = \"text\")"},{"path":"sec-post-gwas.html","id":"chr03-32521809","chapter":"4 Post-GWAS","heading":"4.2 Chr03: 32521809","text":"aaa","code":""},{"path":"sec-post-gwas.html","id":"chr10-15162418","chapter":"4 Post-GWAS","heading":"4.3 Chr10: 15162418","text":"aaa","code":""},{"path":"sec-extra.html","id":"sec-extra","chapter":"5 Extra Analysis and Visualization","heading":"5 Extra Analysis and Visualization","text":"","code":""},{"path":"sec-extra.html","id":"geographic-information","chapter":"5 Extra Analysis and Visualization","heading":"5.1 Geographic Information","text":"Create world map showcasing percentage distribution origins 327 rice samples, represented using gradient color scale.","code":"\n##### R CODES #####\n\n# Set the working directory for initial setup\nsetwd(\"...change...\")\n\n# Load the phenotype data from a CSV file\nPheno_data = read.csv(\"IRRI_311_Pheno_AG_Clean_ID_Sorted.csv\")\n\n# Extract the origin information and create a frequency table\norigin = Pheno_data$Origin\ntable(origin)\n\n# Create a data frame with region names, counts, and percentages\ndata = data.frame(\n  \"region\" = names(table(origin)),  # Region names\n  \"number\" = as.numeric(table(origin)),  # Number of occurrences per region\n  \"perc\" = as.numeric(table(origin)) / length(Pheno_data$Origin)  # Percentage per region\n)\n\n# Load ggplot2 for visualization and map_data for world map data\nlibrary(ggplot2)\noptions(scipen = 999)  # Disable scientific notation for readability\nworld = map_data(\"world\")  # Load world map data\nhead(world)  # Preview the world map data\nwrite.csv(world, \"world_map.csv\")  # Save the world map data to a CSV file for reference\n\n# Rename specific regions in the data frame for consistency with map data\ndata[4, 1] = \"Brunei\"\ndata[5, 1] = \"Burkina Faso\"\ndata[11, 1] = \"Ivory Coast\"\ndata[20, 1] = \"Laos\"\ndata[31, 1] = \"Sierra Leone\"\ndata[32, 1] = \"Solomon Islands\"\ndata[33, 1] = \"Sri Lanka\"\ndata[36, 1] = \"Vietnam\"\ndata[37, 1] = \"Niger\"\n\n# Save the updated region information to a CSV file\nwrite.csv(data, \"origin_map.csv\")\n\n# Read the processed origin map data\norigin_map = read.csv(\"origin_map.csv\")\n\n# Load additional libraries for data manipulation\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(ggplot2)\n\n# Merge the world map data with the origin map data by region\nworldSubset = inner_join(world, origin_map, by = \"region\")\ntable(worldSubset$region)  # Check the frequency of regions in the subset\n\n# Define a minimalist theme for the plot\nplain = theme(\n  axis.text = element_blank(),  # Remove axis text\n  axis.line = element_blank(),  # Remove axis lines\n  axis.ticks = element_blank(),  # Remove axis ticks\n  panel.border = element_blank(),  # Remove panel border\n  panel.grid = element_blank(),  # Remove grid lines\n  axis.title = element_blank(),  # Remove axis titles\n  panel.background = element_rect(fill = \"white\"),  # Set panel background to white\n  plot.title = element_text(hjust = 0.5)  # Center the plot title\n)\n\n# Create a world map visualization with percentage-based fill\nggplot(data = worldSubset, mapping = aes(x = long, y = lat, group = group)) +\n  # Add the base world map with light gray fill\n  geom_polygon(data = world, aes(x = long, y = lat, group = group),\n               fill = \"#f7f6f6\", color = \"#999999\", linewidth = 0.01) +\n  # Fill regions based on percentage\n  geom_polygon(aes(fill = perc)) +\n  # Define a gradient color scale for the fill\n  scale_fill_gradient(\n    low = \"#f2d489\",  # Low percentage color\n    high = \"#e8542d\",  # High percentage color\n    name = \"Percentage (%)\",  # Legend title\n    breaks = c(4, 8, 12),  # Breaks for the legend\n    labels = c(\"4\", \"8\", \"12\"),  # Labels for the legend\n    guide = guide_colorbar(\n      barwidth = 10,  # Width of the color bar\n      barheight = 1.2  # Height of the color bar\n    )\n  ) +\n  plain +  # Apply the minimalist theme\n  # Customize the legend appearance and position\n  theme(\n    legend.title = element_text(size = 14),  # Legend title font size\n    legend.text = element_text(size = 12),  # Legend text font size\n    legend.position = \"bottom\"  # Position the legend at the bottom\n  )\n\n# Final plot size recommendation: 7' x 4'"},{"path":"sec-extra.html","id":"linkage-disequilibrium-ld-decay-across-genome","chapter":"5 Extra Analysis and Visualization","heading":"5.2 Linkage Disequilibrium (LD) Decay Across Genome","text":"Computation visualization LD decay. First, utilizes PLINK thin SNPs (10%) calculate pairwise LD (r²) within specified distance windows (1000 Kb). , Analyzes PLINK output compute average r² across distance intervals (window.size), summarizing LD decay patterns. Finally, generates smooth LD decay plot, highlighting relationship physical distance (kb) LD (r²).","code":"##### PLINK COMMANDS #####\n\n# Change your path into the directory of the 'IRRI_18M_311'\n# cd ...your file path...\n\n./plink --bfile IRRI_1.9M_327 --thin 0.1 --set-hh-missing --r2 --ld-window-r2 0 --ld-window 99999 --ld-window-kb 1000 --out IRRI_190K_327_LD\n##### R CODES #####\n\n# Set the working directory for initial setup\nsetwd(\"...change...\")\n\n# Load the required library\nlibrary(data.table)\n\n# Read the input data file containing LD information\nLD = fread(\"IRRI_190K_311_LD.ld\")\n\n# Function to calculate LD decay\nLD.decay = function(data, window.size){ \n  # Order the data by distance\n  ld1 = data[order(data[, 5] - data[, 2]), ]\n  distance = ld1[, 5] - ld1[, 2]  # Calculate distance between loci\n  ld_distance = data.frame(distance, R2 = ld1$R2)  # Create a data frame with distance and R² values\n  \n  # Define blocks for the distance intervals\n  block = seq(1, max(ld_distance[, 1]), by = window.size)\n  ld2 = rep(0, length(block))  # Initialize an array to store mean R² values\n  decay = data.frame(block, ld2)  # Create a data frame to store LD decay information\n  \n  # Initialize a progress bar\n  pb = txtProgressBar(min = 0, max = length(block), style = 3)\n  \n  # Loop through each block to calculate mean R²\n  for (i in seq_along(block)) {\n    # Subset data within the current block range\n    intv = subset(ld_distance, (ld_distance[, 1] >= block[i] & ld_distance[, 1] < (block[i] + window.size)))\n    # Compute the mean R² for the current block\n    decay[i, 2] = mean(intv[, 2], na.rm = TRUE)\n    # Update the progress bar\n    setTxtProgressBar(pb, i)\n  }\n  \n  # Close the progress bar\n  close(pb)\n  \n  return(decay)  # Return the LD decay data frame\n}\n\n# Run the LD decay function with a window size of 1000\nLD.decay = LD.decay(data = LD, window.size = 1000)\n\n# Save the LD decay data as an RDS file\nsaveRDS(LD.decay, \"IRRI_190K_327_LD.rds\")\n\n# Load the saved LD decay data\nLD.decay = readRDS(\"IRRI_190K_327_LD.rds\")\n\n# Load ggplot2 for visualization\nlibrary(ggplot2)\n\n# Plot LD decay\nggplot(LD.decay) +\n  labs(x = \"Distance (kb)\", y = expression(r^{2})) +  # Axis labels with proper formatting\n  geom_line(aes(x = block, y = ld2), color = \"#d3a02f\", size = 2) +  # Add a line plot for LD decay\n  scale_x_continuous(\n    limits = c(0.0, 4.5*10^5),  # Set x-axis limits\n    breaks = c(0, 1*10^5, 2*10^5, 3*10^5, 4*10^5),  # Define breaks\n    labels = c(\"0\", \"100\", \"200\", \"300\", \"400\"),  # Label breaks in kb\n    expand = c(0.01, 0)  # Adjust axis expansion\n  ) +\n  scale_y_continuous(\n    limits = c(0.0, 0.65),  # Set y-axis limits\n    breaks = c(0, 0.2, 0.4, 0.6),  # Define breaks\n    labels = c(\"0.0\", \"0.2\", \"0.4\", \"0.6\"),  # Label breaks\n    expand = c(0.03, 0)  # Adjust axis expansion\n  ) +\n  theme_classic() +  # Apply a classic theme\n  theme(\n    axis.title.x = element_text(size = 18),  # Customize x-axis title font size\n    axis.title.y = element_text(size = 18, vjust = 2),  # Customize y-axis title font size and position\n    axis.text.x = element_text(size = 16),  # Customize x-axis text font size\n    axis.text.y = element_text(size = 16)   # Customize y-axis text font size\n  )\n  \n# Final plot size recommendation: 6' x 4'"},{"path":"sec-extra.html","id":"genetic-pattern","chapter":"5 Extra Analysis and Visualization","heading":"5.3 Genetic Pattern","text":"","code":"\n##### PLINK COMMANDS ##### \n\n# Change your path into the directory of the 'IRRI_18M_327'\n# cd ...your file path...\n\nsystem(\"plink --bfile IRRI_404K_3024 --pca 3024\")\n##### R CODES #####\n\n# Set the working directory for initial setup\nsetwd(\"...change...\")\n\neigenval = read.table(\"plink.eigenval\")\neigenval = as.numeric(eigenval[,1])\neigenval = eigenval[which(eigenval>0)]\n\n##### Eigenvalue of PCA from plink #####\nvariance_proportion = eigenval / sum(eigenval) # PC1: 8.11%; PC2: 4.17%; PC3: 2.52%\nvariance_proportion[1:50]*100\n\nlibrary(ggplot2)\nlibrary(ggthemes)\n\nplot_pca_variance = function(variance_proportion, num_pcs = 15, num_bins = 4) {\n  \n  if (!is.numeric(variance_proportion)) {\n    stop(\"variance_proportion must be a numeric vector\")\n  }\n  \n  variance_data = data.frame(\n    PCs = 1:num_pcs,\n    PV = variance_proportion[1:num_pcs] * 100,  # Proportion of Variance\n    CV = cumsum(variance_proportion[1:num_pcs] * 100)  # Cumulative Proportion\n  )\n  col = c(rep(\"#765635\", num_bins), rep(\"#e5d5c5\", num_pcs - num_bins))\n  \n  ylim.PV = c(0, 10)\n  ylim.CP = c(0, 100)\n  b = diff(ylim.PV) / diff(ylim.CP)\n  a = ylim.PV[1] - b * ylim.CP[1]\n  \n  plot = ggplot(variance_data, aes(x = PCs, y = PV)) +\n    geom_bar(stat = \"identity\", show.legend = FALSE, fill = col) +\n    geom_line(aes(y = a + CV * b), color = \"grey30\", lwd = 1.5) +\n    geom_point(aes(y = a + CV * b), color = \"grey10\", size = 4) +\n    xlab(\"Principal components axis\") +\n    scale_x_continuous(breaks = c(1, 5, 10, 15, num_pcs)) +\n    scale_y_continuous(\"Proportion of variance (%)\", limits = c(0, 10), \n                       sec.axis = sec_axis(~(. - a) / b, name = \"Cumulative proportion (%)\")) +\n    theme_base() +\n    theme(\n      axis.title.x = element_text(size = 16),\n      axis.title.y.left = element_text(size = 16, color = \"#765635\"),\n      axis.title.y.right = element_text(size = 16, color = \"grey10\"),\n      axis.text.x = element_text(size = 14),\n      axis.text.y.left = element_text(size = 13),\n      axis.text.y.right = element_text(size = 13, color = \"grey10\")\n    ) +\n    theme(legend.position = \"none\")\n  return(plot) # SIZE: A6\n}\nplot_pca_variance(variance_proportion, num_pcs = 20, num_bins = 3)\n\n##### Eigenvector of PCA from plink #####\nlibrary(data.table)\neigenvec = fread(\"plink.eigenvec\")\neigenvec = as.data.frame(eigenvec[, 2:6])\ncolnames(eigenvec) = c(\"ID\", \"PC1\", \"PC2\", \"PC3\", \"PC4\")\n\nsetwd(\"C:/Users/teddy/Desktop/TAMU/P1/404K/327\")\nID = read.csv(\"327in3024.csv\")\ndata = cbind(ID[,c(2,4,5,6)], eigenvec)\n\n# PCA Scatter Plot: PC1 vs PC2\nlibrary(ggplot2)\nPC1v2 = ggplot(data, aes(x = PC1, y = PC2, color = GWAS)) +\n  geom_point(size = 3, alpha = 0.5) +\n  labs(x = \"PC 1 (8.11%)\", y = \"PC 2 (4.17%)\") +\n  theme_classic() +\n  theme(legend.position = \"none\") +\n  theme(\n    axis.title.x =   element_text(size = 16),\n    axis.title.y =   element_text(size = 16),\n    axis.text.x = element_text(size = 10),\n    axis.text.y = element_text(size = 10)) +\n  scale_color_manual(values = c(\"grey\",\"#bd9233\"))\nPC1v2 +\n  geom_point(data = subset(data, GWAS == \"TRUE\"), aes(PC1, PC2), color = \"#bd9233\", size = 3, alpha = 0.5) +\n  geom_point(data = subset(data, GWAS == \"TRUE\"), aes(PC1, PC2), color = \"#bd9233\", size = 3, shape = 20)\n# 5*7\n\n# PCA Scatter Plot: PC1 vs PC3\nPC1v3 = ggplot(data, aes(x = PC1, y = PC3, color = GWAS)) +\n  geom_point(size = 3, alpha = 0.5) +\n  labs(x = \"PC 1 (8.11%)\", y = \"PC 3 (2.52%)\") +\n  theme_classic() +\n  theme(legend.position = \"none\") +\n  theme(\n    axis.title.x =   element_text(size = 16),\n    axis.title.y =   element_text(size = 16),\n    axis.text.x = element_text(size = 10),\n    axis.text.y = element_text(size = 10)) +\n  scale_color_manual(values = c(\"grey\",\"#bd9233\"))\nPC1v3 +\n  geom_point(data = subset(data, GWAS == \"TRUE\"), aes(PC1, PC3), color = \"#bd9233\", size = 3, alpha = 0.5) +\n  geom_point(data = subset(data, GWAS == \"TRUE\"), aes(PC1, PC3), color = \"#bd9233\", size = 3, shape = 20)\n\n# PCA Scatter Plot: PC1 vs PC2 vs PC3\nlibrary(plotly)\ncols = colnames(data)\ntext_content = paste0('\"<\/br> ◉ ', cols, ': \", data$', cols, collapse = ', ')\ntext = as.formula(paste(\"~paste(\", text_content, \")\"))\n\nplot_ly(data, x = ~PC1, y = ~PC2, z = ~PC3,\n        type = \"scatter3d\", mode = \"markers\", \n        color = ~GWAS, colors = c(\"grey\",\"#bd9233\"),\n        marker = list(size = c(2, 4)),\n        text = text) %>%\n  layout(title = NA,\n         scene = list(\n           xaxis = list(title = \"PC1 (8.11%)\", showline = TRUE, showgrid = TRUE, zeroline = TRUE, zerolinecolor = \"grey\"),\n           yaxis = list(title = \"PC2 (4.17%)\", showline = TRUE, showgrid = TRUE, zeroline = TRUE, zerolinecolor = \"grey\"),\n           zaxis = list(title = \"PC3 (2.52%)\", showline = TRUE, showgrid = TRUE, zeroline = TRUE, zerolinecolor = \"grey\")))"},{"path":"sec-findings.html","id":"sec-findings","chapter":"6 Findings","heading":"6 Findings","text":"used subset 311 samples analysis. \nsubset obtained excluding 30 samples phenotypic data\nlacked genotypic data, well 2,713 samples \ngenotypic data corresponding phenotypic data.used subset 311 samples analysis. \nsubset obtained excluding 30 samples phenotypic data\nlacked genotypic data, well 2,713 samples \ngenotypic data corresponding phenotypic data.final dataset comprises 1,972,824 SNPs (1,972K; 1.9M) 311\nsamples. Criteria applied filter certain SNPs, \nefforts made retain samples missing rates \nwithin acceptable limits ( < ~10%). Although samples\nexhibited lower inbreeding coefficients (indicating higher\nheterozygosity), 311 samples retained final dataset\nGWAS analysis.final dataset comprises 1,972,824 SNPs (1,972K; 1.9M) 311\nsamples. Criteria applied filter certain SNPs, \nefforts made retain samples missing rates \nwithin acceptable limits ( < ~10%). Although samples\nexhibited lower inbreeding coefficients (indicating higher\nheterozygosity), 311 samples retained final dataset\nGWAS analysis.deviations measurement 14-day (3.09 9.10) \nsmaller 7-day (2.93 8.91)→ use measurements \n14-day better.deviations measurement 14-day (3.09 9.10) \nsmaller 7-day (2.93 8.91)→ use measurements \n14-day better.R packages collections functions, data, documentation \nextend R’s capabilities. packages hosted CRAN,\nBioconductor, GitHub.Basic Installation: Use install.packages() function \ninstall packages CRAN. example: command downloads \ninstalls ggplot2 package.\n\ninstall.packages(\"ggplot2\") \nLoad Package: installation, load package using:\nloaded, can use functions.\n\nlibrary(ggplot2) Basic Installation: Use install.packages() function \ninstall packages CRAN. example: command downloads \ninstalls ggplot2 package.Load Package: installation, load package using:\nloaded, can use functions.Bioconductor hosts many bioinformatics packages. install, follow\nsteps:Install BiocManager:\n\ninstall.packages(\"BiocManager\") Install BiocManager:Install Bioinformatics Packages: Use BiocManager::install() \ninstall Bioconductor packages. Example: installs ggtree\npackage.\n\nBiocManager::install(\"ggtree\") Install Bioinformatics Packages: Use BiocManager::install() \ninstall Bioconductor packages. Example: installs ggtree\npackage.Load Package:\n\nlibrary(ggtree)Load Package:specialized packages hosted GitHub. install :Install remotes devtools:\n\ninstall.packages(\"remotes\") Install remotes devtools:Install Package GitHub: Use remotes::install_github().\nexample: installs circlize package circular\nvisualization.\n\nremotes::install_github(\"TeddYenn/ShiNyP_Test\")  Install Package GitHub: Use remotes::install_github().\nexample: installs circlize package circular\nvisualization.Load Package:\n\nlibrary(ShiNyP_Test) Load Package:update installed packages:\n\nupdate.packages(ask = FALSE) update installed packages:Bioconductor packages:\n\nBiocManager::install(update = TRUE) Bioconductor packages:need remove package:DOWNLOAD & USE PLINK TAMU HPRC","code":"\ninstall.packages(\"ggplot2\") \nlibrary(ggplot2) \ninstall.packages(\"BiocManager\") \nBiocManager::install(\"ggtree\") \nlibrary(ggtree)\ninstall.packages(\"remotes\") \nremotes::install_github(\"TeddYenn/ShiNyP_Test\")  \nlibrary(ShiNyP_Test) \nupdate.packages(ask = FALSE) \nBiocManager::install(update = TRUE) \nremove.packages(\"ggplot2\") "},{"path":"sec-findings.html","id":"step-1-understand-r-packages","chapter":"6 Findings","heading":"Step 1: Understand R Packages","text":"R packages collections functions, data, documentation \nextend R’s capabilities. packages hosted CRAN,\nBioconductor, GitHub.","code":""},{"path":"sec-findings.html","id":"step-2-install-cran-packages","chapter":"6 Findings","heading":"Step 2: Install CRAN Packages","text":"Basic Installation: Use install.packages() function \ninstall packages CRAN. example: command downloads \ninstalls ggplot2 package.\n\ninstall.packages(\"ggplot2\") \nLoad Package: installation, load package using:\nloaded, can use functions.\n\nlibrary(ggplot2) Basic Installation: Use install.packages() function \ninstall packages CRAN. example: command downloads \ninstalls ggplot2 package.Load Package: installation, load package using:\nloaded, can use functions.","code":"\ninstall.packages(\"ggplot2\") \nlibrary(ggplot2) "},{"path":"sec-findings.html","id":"step-3-install-bioconductor-packages","chapter":"6 Findings","heading":"Step 3: Install Bioconductor Packages","text":"Bioconductor hosts many bioinformatics packages. install, follow\nsteps:Install BiocManager:\n\ninstall.packages(\"BiocManager\") Install BiocManager:Install Bioinformatics Packages: Use BiocManager::install() \ninstall Bioconductor packages. Example: installs ggtree\npackage.\n\nBiocManager::install(\"ggtree\") Install Bioinformatics Packages: Use BiocManager::install() \ninstall Bioconductor packages. Example: installs ggtree\npackage.Load Package:\n\nlibrary(ggtree)Load Package:","code":"\ninstall.packages(\"BiocManager\") \nBiocManager::install(\"ggtree\") \nlibrary(ggtree)"},{"path":"sec-findings.html","id":"step-4-install-github-packages","chapter":"6 Findings","heading":"Step 4: Install GitHub Packages","text":"specialized packages hosted GitHub. install :Install remotes devtools:\n\ninstall.packages(\"remotes\") Install remotes devtools:Install Package GitHub: Use remotes::install_github().\nexample: installs circlize package circular\nvisualization.\n\nremotes::install_github(\"TeddYenn/ShiNyP_Test\")  Install Package GitHub: Use remotes::install_github().\nexample: installs circlize package circular\nvisualization.Load Package:\n\nlibrary(ShiNyP_Test) Load Package:","code":"\ninstall.packages(\"remotes\") \nremotes::install_github(\"TeddYenn/ShiNyP_Test\")  \nlibrary(ShiNyP_Test) "},{"path":"sec-findings.html","id":"step-5-update-r-packages","chapter":"6 Findings","heading":"Step 5: Update R Packages","text":"update installed packages:\n\nupdate.packages(ask = FALSE) update installed packages:Bioconductor packages:\n\nBiocManager::install(update = TRUE) Bioconductor packages:","code":"\nupdate.packages(ask = FALSE) \nBiocManager::install(update = TRUE) "},{"path":"sec-findings.html","id":"step-6-uninstall-a-package-if-needed","chapter":"6 Findings","heading":"Step 6: Uninstall a Package (If Needed)","text":"need remove package:","code":"\nremove.packages(\"ggplot2\") "},{"path":"sec-findings.html","id":"summary-of-installation-methods","chapter":"6 Findings","heading":"Summary of Installation Methods","text":"DOWNLOAD & USE PLINK TAMU HPRC","code":""},{"path":"sec-summary.html","id":"sec-summary","chapter":"7 Summary","heading":"7 Summary","text":"Construction…Align Accession IDs: Match accession IDs \nphenotypic SNP datasets.Align Accession IDs: Match accession IDs \nphenotypic SNP datasets.SNP Data Processing Quality Control: Perform data generation\nquality control SNP data subset 311 samples.SNP Data Processing Quality Control: Perform data generation\nquality control SNP data subset 311 samples.","code":""},{"path":"sec-summary.html","id":"download-rice-snp-data-from-snp-seek-3k-rg-1","chapter":"7 Summary","heading":"7.1 Download Rice SNP data from SNP-Seek (3K RG)","text":"Data repository 3K RG, hosted IRRI:\nhttps://snpseekv3.irri-e-extension.com/v2/download.zul3K RG 18mio Base SNP Dataset: base SNP set consisting \napproximately 18 million SNPs derived initial ~29\nmillion biallelic SNPs excluding excessive number\nheterozygous calls.3K RG 18mio Base SNP Dataset: base SNP set consisting \napproximately 18 million SNPs derived initial ~29\nmillion biallelic SNPs excluding excessive number\nheterozygous calls.3K RG 404k CoreSNP Dataset: Core SNP set derived \nfiltered SNP set two-step LD pruning procedure.3K RG 404k CoreSNP Dataset: Core SNP set derived \nfiltered SNP set two-step LD pruning procedure.Please download PLINK .bed, .bim, .fam files two\ndatasets. downloading, extract files rename \nIRRI_18M_3024 IRRI_404K_3024.\n%/% operator integer division\n(x %/% y equivalent floor(x/y)) \nindex keeps track 80-line section text counting \nnegative positive sentiment .\n\nreference genome datasets ‘Nipponbare\nMSU7/IRGSP1.0’.\nStep 1: Pre-install Required Package","code":"install.packages(\"BiocManager\") BiocManager::install(version = \"3.19\") BiocManager::install(\"qvalue\")\n##### R CODES #####   vv"},{"path":"sec-summary.html","id":"download-rice-snp-data-from-snp-seek-3k-rg-2","chapter":"7 Summary","heading":"7.2 Download Rice SNP data from SNP-Seek (3K RG)","text":"","code":""}]
